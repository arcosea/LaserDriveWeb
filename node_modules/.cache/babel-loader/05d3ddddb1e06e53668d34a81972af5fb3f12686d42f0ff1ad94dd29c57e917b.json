{"ast":null,"code":"var _jsxFileName = \"/Users/christiandg/LaserDriveWeb/src/darkmode.tsx\";\nimport React from 'react';\nimport \"./darkmode.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkMode = () => {\n  let click = \"clicked\";\n  const body = document.body;\n  const lightmode = \"light\";\n  const darkmode = \"dark\";\n  let mode;\n  if (localStorage) {\n    mode = localStorage.getItem(\"mode\");\n  }\n  if (mode === lightmode || mode === darkmode) {\n    body.classList.add(mode);\n  } else {\n    body.classList.add(lightmode);\n  }\n  const switchMode = e => {\n    if (mode === darkmode) {\n      body.classList.replace(darkmode, lightmode);\n      e.target.classList.remove(click);\n      localStorage.setItem(\"mode\", \"light\");\n      mode = lightmode;\n    } else {\n      body.classList.replace(lightmode, darkmode);\n      e.target.classList.add(click);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: mode === \"dark\" ? click : \"\",\n    id: \"darkmode\",\n    onClick: e => switchMode(e)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = DarkMode;\nexport default DarkMode;\nvar _c;\n$RefreshReg$(_c, \"DarkMode\");","map":{"version":3,"names":["React","DarkMode","click","body","document","lightmode","darkmode","mode","localStorage","getItem","classList","add","switchMode","e","replace","target","remove","setItem"],"sources":["/Users/christiandg/LaserDriveWeb/src/darkmode.tsx"],"sourcesContent":["import React from 'react';\nimport { Theme } from \"dark-mode-ts\";\nimport darkIcon from './moon.png';\nimport lightIcon from './sun.png'\nimport \"./darkmode.css\";\n\nconst DarkMode = () => {\n    let click = \"clicked\";\n    const body = document.body;\n    const lightmode = \"light\";\n    const darkmode = \"dark\";\n    let mode;\n\n    if (localStorage) {\n        mode = localStorage.getItem(\"mode\");\n    }\n\n    if (mode === lightmode || mode === darkmode) {\n        body.classList.add(mode);\n    } else {\n        body.classList.add(lightmode);\n    }\n\n    const switchMode = (e) => {\n        if (mode === darkmode) {\n            body.classList.replace(darkmode, lightmode)\n            e.target.classList.remove(click)\n            localStorage.setItem(\"mode\", \"light\");\n            mode = lightmode;\n        } else {\n            body.classList.replace(lightmode, darkmode);\n            e.target.classList.add(click);\n            localStorage.setItem(\"theme\", \"dark\");\n        }\n    };\n\n    return (\n        <button className={mode === \"dark\" ? click : \"\"}\n            id=\"darkmode\"\n            onClick={(e) => switchMode(e)}\n        ></button>\n    );\n};\n\nexport default DarkMode;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAIzB,OAAO,gBAAgB;AAAC;AAExB,MAAMC,QAAQ,GAAG,MAAM;EACnB,IAAIC,KAAK,GAAG,SAAS;EACrB,MAAMC,IAAI,GAAGC,QAAQ,CAACD,IAAI;EAC1B,MAAME,SAAS,GAAG,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAM;EACvB,IAAIC,IAAI;EAER,IAAIC,YAAY,EAAE;IACdD,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EACvC;EAEA,IAAIF,IAAI,KAAKF,SAAS,IAAIE,IAAI,KAAKD,QAAQ,EAAE;IACzCH,IAAI,CAACO,SAAS,CAACC,GAAG,CAACJ,IAAI,CAAC;EAC5B,CAAC,MAAM;IACHJ,IAAI,CAACO,SAAS,CAACC,GAAG,CAACN,SAAS,CAAC;EACjC;EAEA,MAAMO,UAAU,GAAIC,CAAC,IAAK;IACtB,IAAIN,IAAI,KAAKD,QAAQ,EAAE;MACnBH,IAAI,CAACO,SAAS,CAACI,OAAO,CAACR,QAAQ,EAAED,SAAS,CAAC;MAC3CQ,CAAC,CAACE,MAAM,CAACL,SAAS,CAACM,MAAM,CAACd,KAAK,CAAC;MAChCM,YAAY,CAACS,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC;MACrCV,IAAI,GAAGF,SAAS;IACpB,CAAC,MAAM;MACHF,IAAI,CAACO,SAAS,CAACI,OAAO,CAACT,SAAS,EAAEC,QAAQ,CAAC;MAC3CO,CAAC,CAACE,MAAM,CAACL,SAAS,CAACC,GAAG,CAACT,KAAK,CAAC;MAC7BM,YAAY,CAACS,OAAO,CAAC,OAAO,EAAE,MAAM,CAAC;IACzC;EACJ,CAAC;EAED,oBACI;IAAQ,SAAS,EAAEV,IAAI,KAAK,MAAM,GAAGL,KAAK,GAAG,EAAG;IAC5C,EAAE,EAAC,UAAU;IACb,OAAO,EAAGW,CAAC,IAAKD,UAAU,CAACC,CAAC;EAAE;IAAA;IAAA;IAAA;EAAA,QACxB;AAElB,CAAC;AAAC,KApCIZ,QAAQ;AAsCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}