{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nvar Theme = function (_a) {\n  var darkIcon = _a.darkIcon,\n    lightIcon = _a.lightIcon,\n    altDark = _a.altDark,\n    altLight = _a.altLight,\n    imgWidth = _a.imgWidth,\n    imgHeight = _a.imgHeight,\n    myClass = _a.myClass;\n  var themeFromLocalStorage = localStorage.getItem('theme');\n  var defaultTheme = themeFromLocalStorage === 'light' || themeFromLocalStorage === 'dark' ? themeFromLocalStorage : 'light';\n  var _b = useState(defaultTheme),\n    theme = _b[0],\n    setTheme = _b[1];\n  var toggleTheme = function () {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n  useEffect(function () {\n    document.documentElement.setAttribute('data-theme', theme);\n    localStorage.setItem('theme', theme);\n  }, [theme]);\n  return React.createElement(\"div\", {\n    className: myClass,\n    onClick: toggleTheme\n  }, theme === 'dark' ? React.createElement(\"img\", {\n    src: darkIcon,\n    alt: altDark,\n    width: imgWidth,\n    height: imgHeight\n  }) : React.createElement(\"img\", {\n    src: lightIcon,\n    alt: altLight,\n    width: imgWidth,\n    height: imgHeight\n  }));\n};\nexport { Theme };","map":{"version":3,"mappings":";AAcO,IAAMA,KAAK,GAAG,UAACC,EAAkF;EAAjF,YAAQ;IAAEC,SAAS;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,SAAS;IAAEC,OAAO;EACvF,IAAMC,qBAAqB,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3D,IAAMC,YAAY,GACdH,qBAAqB,KAAK,OAAO,IAAIA,qBAAqB,KAAK,MAAM,GAAGA,qBAAqB,GAAG,OAAO;EACrG,SAAoBI,QAAQ,CAAQD,YAAY,CAAC;IAAhDE,KAAK;IAAEC,QAAQ,QAAiC;EAEvD,IAAMC,WAAW,GAAG;IAChBD,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAClD,CAAC;EAEDG,SAAS,CAAC;IACNC,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAEN,KAAK,CAAC;IAC1DJ,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEP,KAAK,CAAC;EACxC,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAEX,OACIQ,KAAK;IAAAC,SAAS,EAAEf,OAAO;IAAEgB,OAAO,EAAER;EAAW,CACxC,OAAK,KAAK,MAAM,GACbM,KAAK;IAAAG,GAAG,EAAEC,QAAQ;IAAEC,GAAG,EAAEvB,OAAO;IAAEwB,KAAK,EAAEtB,QAAQ;IAAEuB,MAAM,EAAEtB;EAAS,CAAG,IAEvEe,KAAK;IAAAG,GAAG,EAAEtB,SAAS;IAAEwB,GAAG,EAAEtB,QAAQ;IAAEuB,KAAK,EAAEtB,QAAQ;IAAEuB,MAAM,EAAEtB;EAAS,CAAG,CAC5E,CACC;AAEd","names":["Theme","_a","lightIcon","altDark","altLight","imgWidth","imgHeight","myClass","themeFromLocalStorage","localStorage","getItem","defaultTheme","useState","theme","setTheme","toggleTheme","useEffect","document","documentElement","setAttribute","setItem","React","className","onClick","src","darkIcon","alt","width","height"],"sources":["/Users/christiandg/LaserDriveWeb/node_modules/dark-mode-ts/src/theme.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\r\n\r\ninterface ThemeProps {\r\n    darkIcon?: string\r\n    lightIcon?: string\r\n    altDark?: string\r\n    altLight?: string\r\n    imgWidth?: string\r\n    imgHeight?: string\r\n    myClass?: string\r\n}\r\n\r\ntype Theme = 'dark' | 'light'\r\n\r\nexport const Theme = ({darkIcon, lightIcon, altDark, altLight, imgWidth, imgHeight, myClass}: ThemeProps) => {\r\n    const themeFromLocalStorage = localStorage.getItem('theme')\r\n    const defaultTheme =\r\n        themeFromLocalStorage === 'light' || themeFromLocalStorage === 'dark' ? themeFromLocalStorage : 'light'\r\n    const [theme, setTheme] = useState<Theme>(defaultTheme)\r\n\r\n    const toggleTheme = () => {\r\n        setTheme(theme === 'light' ? 'dark' : 'light')\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.documentElement.setAttribute('data-theme', theme)\r\n        localStorage.setItem('theme', theme)\r\n    }, [theme])\r\n\r\n    return (\r\n        <div className={myClass} onClick={toggleTheme}>\r\n            {theme === 'dark' ? (\r\n                <img src={darkIcon} alt={altDark} width={imgWidth} height={imgHeight}/>\r\n            ) : (\r\n                <img src={lightIcon} alt={altLight} width={imgWidth} height={imgHeight}/>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}